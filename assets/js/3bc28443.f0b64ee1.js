"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[9809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=o.createContext({}),c=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(n),f=i,m=s["".concat(d,".").concat(f)]||s[f]||u[f]||r;return n?o.createElement(m,a(a({ref:t},p),{},{components:n})):o.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=f;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[s]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={title:"Node",id:"index",hidden:!1,description:"Operate a Node"},a="Libra Node",l={unversionedId:"Tools/node/index",id:"Tools/node/index",title:"Node",description:"Operate a Node",source:"@site/docs/Tools/node/index.md",sourceDirName:"Tools/node",slug:"/Tools/node/",permalink:"/Tools/node/",draft:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/Tools/node/index.md",tags:[],version:"current",frontMatter:{title:"Node",id:"index",hidden:!1,description:"Operate a Node"},sidebar:"tutorialSidebar",previous:{title:"Move",permalink:"/Tools/move/"},next:{title:"Tower",permalink:"/Tools/tower/"}},d={},c=[{value:"Description",id:"description",level:2},{value:"Node Configuration",id:"node-configuration",level:3},{value:"How to Use the Node Command",id:"how-to-use-the-node-command",level:2},{value:"Starting a Node",id:"starting-a-node",level:3}],p={toc:c},s="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(s,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"libra-node"},"Libra Node"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"The Libra Node application facilitates the operation of a validator or full node within the 0L Network. This application is pivotal for maintaining the network's integrity, processing transactions, and participating in consensus. "),(0,i.kt)("h3",{id:"node-configuration"},"Node Configuration"),(0,i.kt)("p",null,"The 0L Node can function either as a validator node, participating in the consensus and validation of transactions, or as a full node, which replicates the blockchain data and provides query access to clients. Configuration of a node, specifying its role and behavior, is done via a YAML configuration file."),(0,i.kt)("h2",{id:"how-to-use-the-node-command"},"How to Use the Node Command"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"libra node")," command is used to start a 0L validator or full node. The command-line interface provides options for specifying the configuration file necessary for launching the node."),(0,i.kt)("h3",{id:"starting-a-node"},"Starting a Node"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Syntax"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"libra node --config-path <CONFIG_PATH>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Function"),": Starts a 0L validator or full node using the specified configuration file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c, --config-path <CONFIG_PATH>"),": Filepath to the validator or fullnode YAML configuration file."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Example"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To start a 0L node with a specific configuration file:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"libra node --config-path /path/to/node_config.yaml\n")))))),(0,i.kt)("p",null,"This command initializes and runs a 0L node using the configuration specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"/path/to/node_config.yaml"),", setting up the node as either a validator or a full node based on the configuration details."),(0,i.kt)("hr",null))}u.isMDXComponent=!0}}]);