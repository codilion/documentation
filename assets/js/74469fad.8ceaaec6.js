"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[6597],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3,sidebar_label:"Restore",description:"Restore and sync the OL Network database to the current state"},i="Restore",l={unversionedId:"validators/restore",id:"validators/restore",title:"Restore",description:"Restore and sync the OL Network database to the current state",source:"@site/docs/validators/restore.md",sourceDirName:"validators",slug:"/validators/restore",permalink:"/validators/restore",draft:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/validators/restore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Restore",description:"Restore and sync the OL Network database to the current state"},sidebar:"tutorialSidebar",previous:{title:"Running a Validator",permalink:"/validators/running-a-validator"},next:{title:"Register",permalink:"/validators/register"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setup",id:"setup",level:3},{value:"Restoring to the latest version of the 0L Network public backup",id:"restoring-to-the-latest-version-of-the-0l-network-public-backup",level:3},{value:"Sync as a Full Node",id:"sync-as-a-full-node",level:3},{value:"Start",id:"start",level:3},{value:"Verify",id:"verify",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"restore"},"Restore"),(0,o.kt)("p",null,"Restore the Database to be up to date with the current state of the Network. Repository is located ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0LNetworkCommunity/epoch-archive-testnet"},"here")," and contains other useful commands out this scope."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This guide is referencing the REX testnet as we develop the ",(0,o.kt)("inlineCode",{parentName:"p"},"libra-framework")," software for v6.9.x (soon v7)")),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You will need an account and libra configuration to use this tool"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"# Create account\nlibra wallet keygen\n\n#Initialize configuration\nlibra config init\n"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The Makefile is designed for libra-framework v6.9.x (soon v7) Ensure you are using the correct version.")),(0,o.kt)("h3",{id:"setup"},"Setup"),(0,o.kt)("p",null,"  Clone the repo and prepare the binary:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/0LNetworkCommunity/epoch-archive-testnet\ncd ~/epoch-archive-testnet\nmake bins\n")),(0,o.kt)("h3",{id:"restoring-to-the-latest-version-of-the-0l-network-public-backup"},"Restoring to the latest version of the 0L Network public backup"),(0,o.kt)("p",null,"This is most likely all you will need to restore and start/resume syncing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  cd ~/epoch-archive-testnet\n  make wipe-db && make restore-all\n")),(0,o.kt)("h3",{id:"sync-as-a-full-node"},"Sync as a Full Node"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You will need to open port ",(0,o.kt)("inlineCode",{parentName:"p"},"6182")," and also verify your seed peers in the yaml")),(0,o.kt)("p",null,"Currently you need to sync as a full node. To do that you need to add the contents of ",(0,o.kt)("a",{parentName:"p",href:"/validators/yaml-templates/fullnode-yaml"},"fullnode.yaml")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.libra/fullnode.yaml")),(0,o.kt)("p",null,"You will need to change the file to point at the correct locations for your database and genesis blob. By default these will be ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.libra/db")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.libra/genesis/genesis.blog")," respectfully."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"data_dir: /change/to/your/db/dir\n\ngenesis_file_location: /path/to/your/genesis/blob\n\n\n")),(0,o.kt)("h3",{id:"start"},"Start"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"libra node --config-path ~/.libra/fullnode.yaml")),(0,o.kt)("h3",{id:"verify"},"Verify"),(0,o.kt)("p",null,"You can check that you are syncing by checking that your ",(0,o.kt)("inlineCode",{parentName:"p"},"ledger_version")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"block_height")," are increasing via the API endpoint ",(0,o.kt)("inlineCode",{parentName:"p"},"curl localhost:8080/v1/ | jq")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Response")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "chain_id": 2,\n  "epoch": "700",\n  "ledger_version": "3322278",\n  "oldest_ledger_version": "3316234",\n  "ledger_timestamp": "1699327458805056",\n  "node_role": "full_node",\n  "oldest_block_height": "1581950",\n  "block_height": "1584970",\n  "git_hash": "bafac94d6edd39d972729db21156d47758eb8969"\n}\n')))}u.isMDXComponent=!0}}]);