"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[3543],{6211:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var a=i(5893),r=i(1151);const l={title:"VFN Setup",sidebar_label:"VFN",sidebar_position:7},s=void 0,t={id:"validators/vfn-setup",title:"VFN Setup",description:"VFN Setup",source:"@site/docs/validators/vfn-setup.md",sourceDirName:"validators",slug:"/validators/vfn-setup",permalink:"/validators/vfn-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/validators/vfn-setup.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"VFN Setup",sidebar_label:"VFN",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Post-Genesis Ceremony Registration",permalink:"/validators/register"},next:{title:"Hot Upgrades",permalink:"/validators/hot-upgrades"}},o={},d=[{value:"VFN Setup",id:"vfn-setup",level:2},{value:"Ports",id:"ports",level:2},{value:"Cleanup",id:"cleanup",level:3},{value:"VFN initialization",id:"vfn-initialization",level:3},{value:"Issue the On-Chain Configuration",id:"issue-the-on-chain-configuration",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"vfn-setup",children:"VFN Setup"}),"\n",(0,a.jsx)(n.p,{children:"Note:\nWe strongly suggest that all validators also run a VFN, which is a node that serves as crucial counterpart to completing the design of our network. The VFN is how the public network is able to reach the validator, which should not be done directly."}),"\n",(0,a.jsx)(n.h2,{id:"ports",children:"Ports"}),"\n",(0,a.jsxs)(n.p,{children:["The following ports must be open: ",(0,a.jsx)(n.code,{children:"6181"}),", ",(0,a.jsx)(n.code,{children:"6182"}),", ",(0,a.jsx)(n.code,{children:"8080"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"6181"}),' is for the private validator fullnode network ("VFN"), it should only allow traffic from the Validator node IP address above.']}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"6182"})," is for the the PUBLIC fullnode network. This is how the public nodes that will be serving JSON-RPC on the network will receive data and submit transactions to the network."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"8080"})," is the RPC port and we suggest VFNs and public fullnodes to serve this port by default for operability."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"cleanup",children:"Cleanup"}),"\n",(0,a.jsxs)(n.p,{children:["Previous clones and testnets leave data in the ",(0,a.jsx)(n.code,{children:".libra"})," directory, clean those up by removing these directories"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"rm -rf ~/libra-framework\nrm -rf ~/.libra/data && rm -rf ~/.libra/genesis && rm -rf ~/.libra/secure-data.json\nrm -f /usr/bin/libra && rm -rf /usr/local/bin/libra && rm -f ~/.cargo/bin/libra\n"})}),"\n",(0,a.jsx)(n.p,{children:"Clone libra-framework and build"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd ~\ngit clone https://github.com/0LNetworkCommunity/libra-framework\n\ncd ~/libra-framework\nbash ./util/dev_setup.sh -bt\n. ~/.bashrc\n\ncd ~/libra-framework\ngit fetch --all && git checkout release-6.9.0-rc.10\ncargo build --release -p libra -p diem-db-tool -p diem\n"})}),"\n",(0,a.jsx)(n.p,{children:"Make sure your path to libra is global and persistent"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo cp -f ~/libra-framework/target/release/libra* ~/.cargo/bin/\n"})}),"\n",(0,a.jsx)(n.h3,{id:"vfn-initialization",children:"VFN initialization"}),"\n",(0,a.jsxs)(n.p,{children:["Initialize ",(0,a.jsx)(n.code,{children:"~/.libra"})," config directory"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra config init\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Grab the ",(0,a.jsx)(n.strong,{children:"genesis blob"})," and ",(0,a.jsx)(n.strong,{children:"waypoint"})," (creates ",(0,a.jsx)(n.code,{children:"fullnode.yaml"})," not used here)"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra config fullnode-init\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Set your client ",(0,a.jsx)(n.code,{children:"libra.yaml"})," with the rpc-load-balancer upstream node"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra config fix --force-url https://rpc.openlibra.space:8080\n"})}),"\n",(0,a.jsx)(n.p,{children:"Configure your VFN using the validator config tool"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra config validator-init --vfn\n"})}),"\n",(0,a.jsx)(n.p,{children:"The VFN config will then be automatically created here"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ~/.libra/vfn.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This is what your VFN ",(0,a.jsx)(n.code,{children:"full_node_networks"})," section should look like (you ",(0,a.jsx)(n.code,{children:"6181"})," and ",(0,a.jsx)(n.code,{children:"6182"}),")"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"full_node_networks:\n- network_id:\n    private: 'vfn'\n  discovery_method: 'onchain'\n  listen_address: '/ip4/0.0.0.0/tcp/6181'\n  seeds:\n    1234yourvalidatorpublickey:\n      addresses:\n      - '/ip4/<validator_ip>/tcp/6181/noise-ik/0x1234yourvalidatorpublickey/handshake/0'\n      role: 'Validator'\n- network_id: 'public'\n  discovery_method: 'onchain'\n  listen_address: '/ip4/0.0.0.0/tcp/6182'\n  identity:\n    type: 'from_file'\n    path: '/home/vfnuser/.libra/validator-full-node-identity.yaml'\n"})}),"\n",(0,a.jsx)(n.p,{children:"Note:\nYour VFN will use your validator as an upstream without an identity, while the public network will use the identity file."}),"\n",(0,a.jsx)(n.h3,{id:"issue-the-on-chain-configuration",children:"Issue the On-Chain Configuration"}),"\n",(0,a.jsx)(n.p,{children:"From your VFN, take note of the public IPv4 address"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"curl ipinfo.io\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Take note of your ",(0,a.jsx)(n.code,{children:"full_node_network_public_key"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep full_node_network_public_key ~/.libra/public-keys.yaml\n\n# example: full_node_network_public_key: "0xabcdyourvfnpublickey"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["On both Validator and VFN machines, make sure the ",(0,a.jsx)(n.code,{children:"operator.yaml"})," is configured with VN and VFN's IP address and separate public keys"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ~/.libra/operator.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["On both Validator and VFN machines, make sure the ",(0,a.jsx)(n.code,{children:"operator.yaml"})," is configured with VFN's public key and ip address"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nano ~/.libra/operator.yaml\n"})}),"\n",(0,a.jsxs)(n.p,{children:["On both machines, the config in ",(0,a.jsx)(n.code,{children:"operator.yaml"})," should be complete with separate Validator and VFN keys and IPs"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'validator_network_public_key: "0xthiswasalreadysetpublickey"\nvalidator_host:\n  host: <validator_ip>\n  port: 6180\nfull_node_network_public_key: "0xabcdyourvfnpublickey"\nfull_node_host:\n  host: <vfn_ip>\n  port: 6181\n'})}),"\n",(0,a.jsx)(n.p,{children:"On your Validator, update the on-chain config for the VN/VFN (do this just once)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra txs validator update\n\nEnter your 0L mnemonic:\n\ud83d\udd11\ntransaction success  \xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7\xb7 \u2713\n"})}),"\n",(0,a.jsx)(n.p,{children:"Wait an epoch and then check the on-chain values to confirm"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"libra query val-config -a 0xabc4321yourvalidatoraccount | jq\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>t,a:()=>s});var a=i(7294);const r={},l=a.createContext(r);function s(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);