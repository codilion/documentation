"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[7361],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(k,i(i({ref:t},c),{},{components:r})):a.createElement(k,i({ref:t},c))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8318:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:5,sidebar_label:"Genesis",description:"Launch the 0L Network"},i="0L Genesis Ceremony Guide",l={unversionedId:"validators/genesis",id:"validators/genesis",title:"0L Genesis Ceremony Guide",description:"Launch the 0L Network",source:"@site/docs/validators/genesis.md",sourceDirName:"validators",slug:"/validators/genesis",permalink:"/validators/genesis",draft:!1,editUrl:"https://github.com/0LNetworkCommunity/documentation/edit/main/docs/validators/genesis.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Genesis",description:"Launch the 0L Network"},sidebar:"tutorialSidebar",previous:{title:"Register",permalink:"/validators/register"},next:{title:"Hot Upgrades",permalink:"/validators/hot-upgrades"}},s={},p=[{value:"High Level Ceremony Steps",id:"high-level-ceremony-steps",level:3},{value:"Genesis Ceremony Steps",id:"genesis-ceremony-steps",level:2},{value:"1. Cleanup",id:"1-cleanup",level:3},{value:"2. Fetch source &amp; verify commit hash",id:"2-fetch-source--verify-commit-hash",level:3},{value:"3. Build <code>libra-framework</code> packages",id:"3-build-libra-framework-packages",level:3},{value:"4. Prepare <code>.libra</code> directory and add GitHub PAT (use classic with repo privileges)",id:"4-prepare-libra-directory-and-add-github-pat-use-classic-with-repo-privileges",level:3},{value:"5. Pre-Genesis Registration",id:"5-pre-genesis-registration",level:3},{value:"6. PR Received",id:"6-pr-received",level:3},{value:"7. PR Merged",id:"7-pr-merged",level:3},{value:"8. Build JSON_Legacy",id:"8-build-json_legacy",level:3},{value:"9. All nodes added to <code>layout.yaml</code> users key",id:"9-all-nodes-added-to-layoutyaml-users-key",level:3},{value:"10. Pull from genesis repo and build",id:"10-pull-from-genesis-repo-and-build",level:3},{value:"11. Start nodes!",id:"11-start-nodes",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"0l-genesis-ceremony-guide"},"0L Genesis Ceremony Guide"),(0,n.kt)("p",null,"This guide outlines the essential steps for conducting a Genesis Ceremony in the OL Network. The Genesis Ceremony is a pivotal event marking the creation of the network's genesis blob \u2014 the foundational block that underpins the entire blockchain. It's a crucial process that not only initiates the network but also involves transitioning or migrating the network's state from an earlier version (in this case, from v5 to v6.9.0). This ensures continuity and preserves the integrity of the network through upgrades or hard forks. Follow this document to navigate the process effectively, ensuring a smooth and successful launch or upgrade of the OL Network."),(0,n.kt)("h3",{id:"high-level-ceremony-steps"},"High Level Ceremony Steps"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Cleanup"),(0,n.kt)("li",{parentName:"ol"},"Fetch Source & Verify Commit Hash"),(0,n.kt)("li",{parentName:"ol"},"Build ",(0,n.kt)("inlineCode",{parentName:"li"},"libra-framework")," Packages"),(0,n.kt)("li",{parentName:"ol"},"Prepare ",(0,n.kt)("inlineCode",{parentName:"li"},".libra")," Directory and Add GitHub PAT"),(0,n.kt)("li",{parentName:"ol"},"Pre-Genesis Registration",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Stop"),": Wait for coordinator to merge all PR's. Step 8 can be done while you wait"))),(0,n.kt)("li",{parentName:"ol"},"PR Received"),(0,n.kt)("li",{parentName:"ol"},"PR Merged"),(0,n.kt)("li",{parentName:"ol"},"Build JSON_Legacy"),(0,n.kt)("li",{parentName:"ol"},"All Nodes Added to ",(0,n.kt)("inlineCode",{parentName:"li"},"layout.yaml")," Users Key",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Wait for Coordinator"),": Wait for coordinator post-pre-genesis set closure and to add all genesis participants."))),(0,n.kt)("li",{parentName:"ol"},"Pull from Genesis Repo and Build",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Wait for Coordinator"),": Wait for coordinator's signal to start."))),(0,n.kt)("li",{parentName:"ol"},"Start Nodes!")),(0,n.kt)("hr",null),(0,n.kt)("p",null,"Each step requires careful attention to the coordinator's instructions, ensuring a smooth and successful Genesis Ceremony for the OL Network. Coordination happens via OL Discord and a sheet will track participants."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Coordinator"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"sirouk")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,n.kt)("strong",{parentName:"p"},"Important"),": Only proceed with asynchronous steps after the coordinator confirms the previous sequential blocking steps as completed.")),(0,n.kt)("h2",{id:"genesis-ceremony-steps"},"Genesis Ceremony Steps"),(0,n.kt)("h3",{id:"1-cleanup"},"1. Cleanup"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Delete any previous forked ",(0,n.kt)("inlineCode",{parentName:"p"},"release-v6.9.0-rc.0-genesis-2")," in your GitHub organization.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Previous clones and testnets leave data in the ",(0,n.kt)("inlineCode",{parentName:"p"},".libra")," directory, so you need to clean up:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"rm -Rf ~/libra-framework\nrm -Rf ~/.libra/data && rm -Rf ~/.libra/genesis && rm -Rf ~/.libra/secure-data.json\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Retrieve Validator Address:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"grep 'account_address' ~/.libra/public-keys.yaml\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fetch Static IP"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"curl -s ipinfo.io | jq .ip\n")))),(0,n.kt)("p",null,"Enter your Validator Address, Operator Name, and Static IP in the Genesis Worksheet."),(0,n.kt)("h3",{id:"2-fetch-source--verify-commit-hash"},"2. Fetch source & verify commit hash"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'cd ~\ngit clone https://github.com/0LNetworkCommunity/libra-framework\ncd ~/libra-framework\ngit fetch --all && git checkout main\ngit log -n 1 --pretty=format:"%H"\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Note"),": Provide git hash in the Genesis Worksheet. Only proceed with the following async steps after the coordinator provides the git hash and your results match.")),(0,n.kt)("h3",{id:"3-build-libra-framework-packages"},"3. Build ",(0,n.kt)("inlineCode",{parentName:"h3"},"libra-framework")," packages"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cd ~/libra-framework\ncargo build --release -p libra -p libra-genesis-tools -p libra-txs -p diem-db-tool\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Confirm with "done" in the Genesis Worksheet.')),(0,n.kt)("h3",{id:"4-prepare-libra-directory-and-add-github-pat-use-classic-with-repo-privileges"},"4. Prepare ",(0,n.kt)("inlineCode",{parentName:"h3"},".libra")," directory and add GitHub PAT (use classic with repo privileges)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ~/.libra/\nnano ~/.libra/github_token.txt\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Confirm with "done" in the Genesis Worksheet.')),(0,n.kt)("h3",{id:"5-pre-genesis-registration"},"5. Pre-Genesis Registration"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Ensure you delete any forked version of ",(0,n.kt)("inlineCode",{parentName:"li"},"release-v6.9.0-rc.0-genesis-2")," in your home org before registering.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/libra-framework\n./target/release/libra-genesis-tools register  --org-github 0LNetworkCommunity --name-github release-v6.9.0-rc.0-genesis-6b\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Confirm with "done" in the Genesis Worksheet.')),(0,n.kt)("h3",{id:"6-pr-received"},"6. PR Received"),(0,n.kt)("p",null,"(coordinator)"),(0,n.kt)("h3",{id:"7-pr-merged"},"7. PR Merged"),(0,n.kt)("p",null,"(coordinator)"),(0,n.kt)("h3",{id:"8-build-json_legacy"},"8. Build JSON_Legacy"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"### Fetch Ancestry Data and Snapshot\nrm -Rf ~/libra-recovery && mkdir -p ~/libra-recovery\nwget https://github.com/0LNetworkCommunity/epoch-archive/raw/main/670.tar.gz -O ~/libra-recovery/670.tar.gz\ncd ~/libra-recovery && tar -xvzf 670.tar.gz\nwget https://raw.githubusercontent.com/sirouk/ol-data-extraction/v-6.9.x-ready/assets/data.json -O ~/libra-framework/tools/genesis/tests/fixtures/v5_recovery.json\n\n### Use v5.2 codebase and snapshot to generate recovery.json for seeding v6.9.x state\nsudo rm -Rf ~/libra-legacy-v6\ncd ~ && git clone -b v6 https://github.com/0LNetworkCommunity/libra-legacy-v6\ncd ~/libra-legacy-v6/ol/genesis-tools\ncargo r -p ol-genesis-tools -- --export-json ~/libra-recovery/v5_recovery.json --snapshot-path ~/libra-recovery/670/state_ver* --ancestry-file ~/libra-recovery/v5_ancestry.json\nmd5sum ~/libra-recovery/v5_recovery.json\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Confirm ",(0,n.kt)("inlineCode",{parentName:"li"},"v5_recovery.json")," md5 hash in the Genesis Worksheet.")),(0,n.kt)("h3",{id:"9-all-nodes-added-to-layoutyaml-users-key"},"9. All nodes added to ",(0,n.kt)("inlineCode",{parentName:"h3"},"layout.yaml")," users key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"(coordinator)  \n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,n.kt)("strong",{parentName:"p"},"Note"),": Pre-genesis set closes here. Wait for coordinator.")),(0,n.kt)("h3",{id:"10-pull-from-genesis-repo-and-build"},"10. Pull from genesis repo and build"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: We will test with the CHAIN=testnet (this is not the same as testing, as testnet has the same settings as mainnet but with shorter epochs)"),(0,n.kt)("pre",{parentName:"blockquote"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# pull and build genesis\ncd ~/libra-framework/tools/genesis\nCHAIN=testnet GIT_ORG=0LNetworkCommunity GIT_REPO=release-v6.9.0-rc.0-genesis-6b RECOVERY_FILE=~/libra-recovery/v5_recovery.json make genesis\n")),(0,n.kt)("ul",{parentName:"blockquote"},(0,n.kt)("li",{parentName:"ul"},'Confirm with "done" in the Genesis Worksheet.'))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,n.kt)("strong",{parentName:"p"},"Note"),": All set. Wait for the coordinator before the next step.")),(0,n.kt)("h3",{id:"11-start-nodes"},"11. Start nodes!"),(0,n.kt)("p",null,"Wait for the coordinator, say a prayer, then start!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"~/libra-framework/target/release/libra node --config-path ~/.libra/validator.yaml\n")),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"End of Ceremony Steps")))}u.isMDXComponent=!0}}]);